name: Reusable deployment workflow

on:
  workflow_call:
    inputs:
      target-env:
        required: true
        type: string
    secrets:
      AWS_REGION:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  deploy:
    name: Deploy to ${{ inputs.target-env }}
    permissions:
      contents: none
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.target-env }}
      # url: ${{ steps.step_id.outputs.url_output }}

    steps:
      - uses: actions/checkout@v2
      
      - run: echo "üéâ target env ${{ inputs.target-env}}"
      - run: echo "üçè is Dev  ${{ inputs.target-env }} == 'Development'"
      - run: echo "üçè is SIT1  ${{ inputs.target-env }} == 'SIT1'"
      - run: echo "üçè is SIT2  ${{ inputs.target-env }} == 'SIT2'"
      - run: echo "üêß is Prod  ${{ inputs.target-env }} == 'Production'"
      
      - name: Variables
        id: vars
        uses: actions/github-script@v3
        with:
          script: |
            const tag = context.sha.substring(0,7)
            const branch = context.ref.split('/').pop()
            const { owner, repo } = context.repo;
            core.exportVariable('BRANCH', branch);
            core.exportVariable('TAG', tag);
            core.exportVariable('REPOSITORY_NAME', repo);
            
      - name: AWS Credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.25.0'
        id: install
        
      - name: Update kube config
        id: kube-context
        run: | 
          aws eks update-kubeconfig --name eks-${{ inputs.target-env }} --region ${{ secrets.AWS_REGION }}

      - name: Install Helm
        uses: azure/setup-helm@v3
        
      - name: Deploy to EKS ${{ inputs.target-env }}
        run: |
          helm upgrade --install --atomic --timeout 5m app ./app/ -f ./app/values.yaml \
            --kube-context arn:aws:eks:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:cluster/eks-${{ inputs.target-env }} --namespace ${{ inputs.target-env }} --create-namespace \
            --set image.repository=${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY_NAME }}:${{ env.BRANCH }}-${{github.sha}} \
            --set environment=${{ inputs.target-env }}
